import Crypto.Random.random
from pwn import *

def kronecker(x, p):
    q = (p - 1) // 2
    return pow(x, q, p)

def findQNR(p):
    r = Crypto.Random.random.randrange(2, p - 1)
    while kronecker(r, p) == 1:
        r = Crypto.Random.random.randrange(2, p - 1)
    return r

def findQR(p):
    r = Crypto.Random.random.randrange(2, p - 1) 
    return pow(r, 2, p)


r = remote('guess.q.2020.volgactf.ru', 7777)

dt = r.recv(4096)

pairs = dt.decode()
pairs = pairs.split('\n')
p = int(pairs[0].split('=')[1].split(', ')[1].replace(')', '').strip())
y = int(pairs[0].split('=')[1].split(', ')[0].replace('(', '').strip())
print(y)
opts = pairs[1].replace('(','').replace(')','').strip().split(', ')
opts = [int(x[:-1]) for x in opts]

for i in range(0,1000):
    output = -1
    if kronecker(y, p) == 1 or (kronecker(opts[0], p) == 1):
        if kronecker(opts[1], p) == 1:
            output = 1
        else:
            output = 0
    else:
           if kronecker(opts[1], p) == 1:
               output = 0
           else:
               output = 1

    if output == 1:
        r.send(b'1\n')
        print('Guessed 1')
    else:
        print('Guessed 0')
        r.send(b'0\n')

    dt = r.recv(4096).decode()
    if (i == 999) and ('CTF' in dt):
        print(dt)
        break
    opts = dt.replace('(', '').replace(')', '').strip().split(', ')
    opts = [int(x[:-1]) for x in opts]
